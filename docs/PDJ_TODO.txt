X load units via service
X directives for filters. dont use checkboxes but colored buttons. N columns
X store search filters in RecipeService, not controller. keep filter values in service

separate config / login service

Ratings

RecipeReview
RecipeID UserID Score (1-5) i made this recipe, i would like to have it again

Bookmark recipe to try it
RecipeId UserId 

when user signed in
review and bookmark icons available from list and from recipe page.
show average score and vote
score widget: 1 PPP-- 5  offIcon, onIcon, + 2 checkboxes: i made it, i'd make it again
X score directive: star-rating

Publish:
when user saves a recipe: display message 
"This recipe is currently private. Other users cannot see it yet. Click Publish so that we review and publish it."

Admin: can publish

--------------

-- link.php : use get_headers to verify url / curl: set user agent and getinfo
-- try angular bootstrap typeahead https://angular-ui.github.io/bootstrap/
-- display parsed/unparsed recipes the same way: split rawText

new Recipe: use localStorage.recipe when field on change or every minute

pdj amazon
x1 angular 1.4
x2 bootstrap
x3 convert menus to boostrap
x4 login page / JS using existing login service

5 register using .net service
Register page:
Select country from dropdown. id
Load state/region list for country
enter city or zip. lookup the other

send to .net api:
country id or 2-letter code
region (optional) with types[0]=="administrative_area_level_1"
district with types[0]=="administrative_area_level_2" if it exists
send short name + long name 
city name (usually short name = long name)

6 recipe submit page
#/recipeEdit/ : new one
#/recipeEdit/:id : existing one

7 Validate form

Name/Title 
Description / Raw Text (Ingredients, Steps, Tips (optional), 
prepopulate with template: INGREDIENTS STEPS TIPS
make text area as many rows as needed

Prep Time (optional), Cooking Time (optional), Total Time (optional) 
Yield Count (int), Yield Unit
IsPersonal (if checked, source is not required), Author, Source (can contain a link), 
Link URLs (optional)), 
Categories (category ID) modify search template

7 After submitting:
1 store raw text in file
2 call .net service to store in SQL server, get new ID.

3 go to #/recipe/:id
view recipe with section titles formatted

8 upload images
link to add images: #/upload/:id 
verify recipe id is valid
return to #/recipe/:id

9 #/recipeEdit/:id : add images to steps

10: user can upload images to any public recipe from another user
how to structure dirs




Amazon
x1 setup SQL Server instance
x2 setup IIS  for .net PDJ app
x3 GoDaddy: point pimentdujour.com to amazon box 52.8.226.210




PDJ
PHP: recipe.php
list .txt files
with their name, title, file date
parse keywords / sections

TITLE
RECIPE BY			Amy Raynaud
PHOTOGRAPH BY		Arthur Raynaud
PREPARATION TIME	10 minutes
COOKING TIME		15 minutes
TOTAL TIME			25 minutes
YIELD				2 servings
Ingredients
Preparation
Recipe Tips
Links of Interest

if value on same line, take value until end of line
if no value on line, take from next line until next keyword

photos: display {name}.jpg or slideshow photos/videos from /img/{name}

list of recipes:
use http://minorart.free.fr/.mt/data.php?data=files&format=json&indent=1&path=.pdj&type=txt

http://localhost/mt/data.php?data=files&format=json&indent=1&path=.pdj&type=txt
http://localhost/mt/data.php?data=album&format=json&indent=1&path=pdj/recipes&config=false

http://localhost/mt/data.php?data=groupedfiles&format=json&indent=1&path=pdj/recipes
=> add date

make angular list and detail views

edit recipe: contenteditable=true
onchange, ajax save text.


//http://tylermcginnis.com/angularjs-factory-vs-service-vs-provider/
//http://stackoverflow.com/questions/16130345/is-there-a-way-i-can-return-a-promise-from-a-resource-without-needing-to-use-q

//Forms Authentication
http://www.seankenny.me/blog/2013/10/02/angularjs-formsauthentication-in-net-land/

window resize

http://stackoverflow.com/questions/23044338/window-resize-directive


AccountsController
[HttpPost]
public HttpResponseMessage SignIn(LogOnModel logOnModel)

public class LogOnModel
    {
        [Required]
        [Display(Name = "User name")]
        public string UserName { get; set; }

        [Required]
        [DataType(DataType.Password)]
        [Display(Name = "Password")]
        public string Password { get; set; }

        [Display(Name = "Remember me?")]
        public bool RememberMe { get; set; }
    }

Test
